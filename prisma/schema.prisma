generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String
  password String @unique
}

model User {
  id           Int     @id @unique(map: "id_UNIQUE") @default(autoincrement())
  username     String  @unique(map: "username_UNIQUE")
  HomeAddress  String
  IdNumber     Int     @unique(map: "IdNumber_UNIQUE")
  MobileNumber Int
  WorkAddress  String
  email        String  @unique
  password     String  @db.VarChar(500)
  Balance      Float?  @default(0)
  LoanLimit    Float?
  request      Int?
  loansArray   loans[]

  loan_guarantors loan_guarantors?
}

model loan_guarantors {
  id          Int    @id @unique(map: "id_UNIQUE") @default(autoincrement())
  guarantor   User?  @relation(fields: [guarantorId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  loan        loans? @relation(fields: [loansId], references: [id],onUpdate: Cascade,onDelete: Cascade)
  loansId     Int?   @unique
  guarantorId Int?   @unique
}

model loans {
  id                   Int       @id @default(autoincrement())
  date_borrowed        DateTime? @default(now())
  date_due             DateTime? @default(now())
  amount               Int
  statusAdminAccept    Boolean?  @default(false)
  statusGuaratorAccept Boolean?  @default(false)

  guarantor_id    Int?
  User            User?            @relation(fields: [userId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  userId          Int?
  loan_guarantors loan_guarantors?
}

